/*
# Copyright (c) 2021 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define SRC &kp LG(LS(S))       //Screen Capture: Gui + Shift + S
#define PHONE &my_phone
#define UNIMAIL &my_uni_mail
#define MYMAIL &my_mail
#define DEEMAIL &my_demen17_mail

/ {

	macros {
        
		ZMK_MACRO(my_phone,
			wait-ms = <30>;
			tap-ms = <40>;
			bindings = <&kp N0 &kp N5 &kp N8 &kp N9 &kp N3 &kp N8 &kp N5 &kp N2 &kp N9 &kp N0>;
    	)

		ZMK_MACRO(my_uni_mail,
			wait-ms = <30>;
			tap-ms = <40>;
			bindings = <&kp M &kp I &kp N &kp H &kp P &kp D &kp H &kp E &kp N1 &kp N6 &kp N1 &kp N6 &kp N5 &kp N2 &kp AT &kp F &kp P &kp T &kp DOT &kp E &kp D &kp U &kp DOT &kp V &kp N>;
    	)

		ZMK_MACRO(my_mail,
			wait-ms = <30>;
			tap-ms = <40>;
			bindings = <&kp T &kp H &kp A &kp N &kp D &kp O &kp C &kp T &kp O &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
    	)

		ZMK_MACRO(my_demen17_mail,
			wait-ms = <30>;
			tap-ms = <40>;
			bindings = <&kp D &kp E &kp E &kp M &kp E &kp N &kp N1 &kp N7 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
    	)
		
    };

	behaviors {
        tdgesc: tap_dance_grave_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_GRAVE_ESC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&kp ESC>;
        };

		tdpguphome: tap_dance_pgup_home {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_PGUP_HOME";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PG_UP>, <&kp HOME>;
        };

		tdpgdnend: tap_dance_pgdn_end {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_PGDN_END";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PG_DN>, <&kp END>;
        };

    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			label = "Base";
			bindings = <
				&tdgesc		&kp Q    &kp W    &kp E    &kp R     &kp T       &kp Y    &kp U  &kp I  &kp O  	  &kp P      &kp LBKT  &kp RBKT
			    &kp TAB     &kp A    &kp S    &kp D    &kp F     &kp G       &kp H    &kp J  &kp K  &kp L     &kp SEMI   	       &kp ENTER   
			    &kp LSHIFT  &kp Z    &kp X 	  &kp C    &kp V     &kp B       &kp B    &kp N  &kp M  &kp COMMA &kp PERIOD &kp SLASH &kp RSHIFT
			    &kp LCTRL   		 &kp LGUI &kp LALT &kp SPACE &kp SPACE   &kp BSPC 		        &mo 1  	  &kp RALT             &kp RCTRL  
			>;
                     sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		function_layer {
			label = "Number";
			bindings = <
				&kp GRAVE	&kp N1   &kp N2   &kp N3   &kp N4    &kp N5      &kp N6   &kp N7 &kp N8 &kp N9    &kp N0     &kp MINUS &kp EQUAL
			    &kp TAB     &trans   &trans   &trans   &trans    &trans      &trans   &trans &trans &trans    &trans     	       &trans   
			    &kp LSHIFT  &trans   &trans   &trans   &trans    &trans      &trans   &trans &trans &trans    &trans     &trans	   &trans
			    &kp LCTRL   		 &trans   &trans   &trans    &trans      &kp DEL 		        &trans    &reset               &bootloader
			>;
                     sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
		};
	};
};
